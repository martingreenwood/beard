g/*===============================
=            PRIMARY            =
===============================*/
.noscroll {
	overflow: hidden;
}

#theme-my-login {
	margin: 100px auto;
}

#primary {
	background: #fff;
}

#content {
	background: -webkit-linear-gradient(225deg, #e6e6e6, #fff); /* For Safari 5.1 to 6.0 */
	background: -o-linear-gradient(225deg, #e6e6e6, #fff); /* For Opera 11.1 to 12.0 */
	background: -moz-linear-gradient(225deg, #e6e6e6, #fff); /* For Firefox 3.6 to 15 */
	background: linear-gradient(225deg, #e6e6e6, #fff);
}

.page-template-default {

	#primary {
		background: -webkit-linear-gradient(225deg, #e6e6e6, #fff); /* For Safari 5.1 to 6.0 */
		background: -o-linear-gradient(225deg, #e6e6e6, #fff); /* For Opera 11.1 to 12.0 */
		background: -moz-linear-gradient(225deg, #e6e6e6, #fff); /* For Firefox 3.6 to 15 */
		background: linear-gradient(225deg, #e6e6e6, #fff);

		article {
			text-align: center;

			.entry-content {

				h1, h2 {
					font-weight: 700;
					font-size: 62px;
					text-transform: uppercase;
					margin: 0 0 30px 0;
				}

				p {
				}
			}
		}
	}
}

/*====================================
=            BRAND SLIDER            =
====================================*/

#brands {
	padding: 100px 0;
	background: #f7f7f7;
	display: inline-block;
	width: 100%;

	header {
		margin-bottom: 50px;
		text-align: center;

		h2 {
			font-weight: 700;
			font-size: 62px;
			text-transform: uppercase;
			margin: 0 0 30px 0;
		}
	}

	.brandicons {
		display: inline-block;
		width: 100%;

		.brandicon {
			border: 2px solid white;
			margin-right: 20px;
			box-sizing: border-box;
			float: left;
			width: calc(20% - 20px);

			&:nth-child(5) {
				margin-right: 0;
			}

			&:nth-child(1) {
				margin-left: 10px;
			}
		}
	}
}

/*=====================================
=            FEATURE IMAGE            =
=====================================*/

#sections {
	// padding: 60px 0;
	background: #ffffff;

	.service {
		// border-bottom: 2px solid #D8DADC;
		// padding: 0 0 60px 0;
		// margin-bottom: 60px;
		@include row;
		// min-height: 600px;
		position: relative;
		// display: unset;

		.wrapper {
		}

		.ovewrlay {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;

			a.more {
				display: block;
				height: 100%;
				text-indent: -9999px;
			}
		}

		&.even {

			.text {
				padding: 40px;
				background-color: #e9e9e9;

				@include media($medium-screen-up) {
					background-color: transparent;
					padding-top: 40px;
					padding-bottom: 40px;
					padding-left: 100px;
					padding-right: 40px;
				}	
			}

			&:before {
				left: auto;
				right: 0;
			}
		}

		&.odd {

			.text {
				padding: 40px;

				@include media($medium-screen-up) {
					padding-top: 40px;
					padding-bottom: 40px;
					padding-right: 100px;
					padding-left: 40px;
				}
			}

			&:before {
				right: auto;
				left: 0;
			}
		}

		.half {
			width: 100%;
			
			@include media($medium-screen-up) {
				width: 50%;
				display: table-cell;
				vertical-align: middle;
				background-size: cover;
				background-position: center;
				background-repeat: no-repeat;
			}

			img {
				display: none;
				width: 100%;
				visibility: hidden;

				@include media($medium-screen-up) {
					display: block;
				}
			}

		}
		
		.text {
			padding: 40px;
			padding-right: 100px;
			background: white;
		}

		h1, h2 {
			font-size: 42px;
			margin: 0 0 20px 0;
		}
	}

	.fulllist {
		padding: 60px 0;
		text-align: center;
		background: #020202;
		background: -webkit-linear-gradient(225deg, #444, #020202); /* For Safari 5.1 to 6.0 */
		background: -o-linear-gradient(225deg, #444, #020202); /* For Opera 11.1 to 12.0 */
		background: -moz-linear-gradient(225deg, #444, #020202); /* For Firefox 3.6 to 15 */
		background: linear-gradient(225deg, #444, #020202);


		h2, h3 {
			font-size: 32px;
			margin: 0;
			color: white;
		}

		ul {
			margin: 0;
			list-style-type: none;

			li {
				margin-right: 20px;
				text-transform: uppercase;
				display: inline-block;
				line-height: 1.2;
				color: white;

				&:after {
					content: " â€¢ ";
					color: white;
					display: inline-block;
					margin-left: 10px;
					font-size: 8px;
					position: absolute;
					line-height: 18px;
				}

				&:last-of-type {
					margin: 0;

					&:after {
						display: none;
					}
				}
			}
		}
	}
}

/*=====================================
=            FEATURE IMAGE            =
=====================================*/

#feature-image {
	height: 50vh;
	position: relative;

	.caption {
		position: absolute;
		top: 0;
		left: 0;
		text-align: right;

		.container {
			margin-bottom: 60px;
		}

		.wrapper {
			margin-bottom: 40px;
			margin-right: 50px;
			display: inline-block;
		}

		h1, h2 {
			margin: 0;
			color: black;
		}

		h1 {
			font-size: 44px;
			font-weight: 700;
			margin: 0px;
			line-height: 1;
			text-transform: uppercase;
		}

		h2 {
			font-size: 16px;
			font-weight: 400;
			letter-spacing: 3px;
			line-height: 1.2;
			text-transform: uppercase;
		}

		hr {
			float: right;
			width: 24px;
			background: black;
		}
	}

	&.white-text {
		h1, h2 {
			color: white;
		}
		hr {
			background-color: white;
		}
	}
}

/*===========================
=            MAP            =
===========================*/

#map {
	width: 100%;
	height: 600px;
	//background-color: grey;

	/* fixes potential theme css conflict */
	img {
	   max-width: inherit !important;
	}

}

/*===========================
=            404            =
===========================*/

.error404 {
	height: 100vh;
	background-color: #eeeeee;

	#game {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: #eeeeee;
		display: none;

		.table {
			background: none;
		}

		// helpers
		// Exponent
		// From: https://github.com/Team-Sass/Sassy-math/blob/master/sass/math.scss#L36

		@function exponent($base, $exponent) {
		  // reset value
		  $value: $base;
		  // positive intergers get multiplied
		  @if $exponent > 1 {
		    @for $i from 2 through $exponent {
		      $value: $value * $base; } }
		  // negitive intergers get divided. A number divided by itself is 1
		  @if $exponent < 1 {
		    @for $i from 0 through -$exponent {
		      $value: $value / $base; } }
		  // return the last value written
		  @return $value;
		}

		@function pow($base, $exponent) {
		  @return exponent($base, $exponent);
		}

		// Transition mixins
		@mixin transition($args...) {
		  -webkit-transition: $args;
		  -moz-transition: $args;
		}

		@mixin transition-property($args...) {
		  -webkit-transition-property: $args;
		  -moz-transition-property: $args;
		}

		// Keyframe animations
		@mixin keyframes($animation-name) {
		  @-webkit-keyframes $animation-name {
		    @content;
		  }
		  @-moz-keyframes $animation-name {
		    @content;
		  }
		  @keyframes $animation-name {
		    @content;
		  }
		}

		@mixin animation($str) {
		  -webkit-animation: #{$str};
		  -moz-animation: #{$str};
		}

		@mixin animation-fill-mode($str) {
		  -webkit-animation-fill-mode: #{$str};
		  -moz-animation-fill-mode: #{$str};
		}

		// Media queries
		@mixin smaller($width) {
		  @media screen and (max-width: $width) {
		    @content;
		  }
		}

		.heading:after {
		  content: "";
		  display: block;
		  clear: both;
		}

		h1.title {
		  font-size: 80px;
		  font-weight: bold;
		  margin: 0;
		  display: block;
		  float: left;
		}

		@include keyframes(move-up) {
		  0% {
		    top: 25px;
		    opacity: 1;
		  }

		  100% {
		    top: -50px;
		    opacity: 0;
		  }
		}

		.score-container {
		  $height: 60px;

		  position: relative;
		  float: right;
		  background: $game-container-background;
		  padding: 15px 25px;
		  font-size: $height;
		  height: $height;
		  line-height: $height + 22px;
		  font-weight: bold;
		  border-radius: 3px;
		  color: white;
		  margin-top: 8px;

		  &:after {
		    position: absolute;
		    width: 100%;
		    top: 10px;
		    left: 0;
		    content: "Score";
		    text-transform: uppercase;
		    font-size: 13px;
		    line-height: 13px;
		    text-align: center;
		    color: $tile-color;
		  }

		  .score-addition {
		    position: absolute;
		    right: 30px;
		    color: red;
		    font-size: $height;
		    line-height: $height;
		    font-weight: bold;
		    color: rgba($text-color, .9);
		    z-index: 100;
		    @include animation(move-up 600ms ease-in);
		    @include animation-fill-mode(both);
		  }
		}

		p {
		  margin-top: 0;
		  margin-bottom: 10px;
		  line-height: 1.65;
		}

		a {
		  color: $text-color;
		  font-weight: bold;
		  text-decoration: underline;
		  cursor: pointer;
		}

		strong {
		  &.important {
		    text-transform: uppercase;
		  }
		}

		hr {
		  border: none;
		  border-bottom: 1px solid lighten($text-color, 40%);
		  margin-top: 20px;
		  margin-bottom: 30px;
		}

		.container {
		  width: $field-width;
		  margin: 0 auto;
		  padding: 0;
		}

		@include keyframes(fade-in) {
		  0% {
		    opacity: 0;
		  }

		  100% {
		    opacity: 1;
		  }
		}

		// Game field mixin used to render CSS at different width
		@mixin game-field {
		  .game-container {
		    margin-top: 40px;
		    position: relative;
		    padding: $grid-spacing;

		    cursor: default;
		    -webkit-touch-callout: none;
		    -webkit-user-select: none;
		    -moz-user-select: none;

		    background: $game-container-background;
		    border-radius: $tile-border-radius * 2;
		    width: $field-width;
		    height: $field-width;
		    -webkit-box-sizing: border-box;
		    -moz-box-sizing: border-box;
		    box-sizing: border-box;

		    .game-message {
		      display: none;

		      position: absolute;
		      top: 0;
		      right: 0;
		      bottom: 0;
		      left: 0;
		      background: rgba($tile-color, .5);
		      z-index: 100;

		      text-align: center;

		      p {
		        font-size: 60px;
		        font-weight: bold;
		        height: 60px;
		        line-height: 60px;
		        margin-top: 222px;
		        // height: $field-width;
		        // line-height: $field-width;
		      }

		      .lower {
		        display: block;
		        margin-top: 59px;
		      }

		      a {
		        display: inline-block;
		        background: darken($game-container-background, 20%);
		        border-radius: 3px;
		        padding: 0 20px;
		        text-decoration: none;
		        color: $bright-text-color;
		        height: 40px;
		        line-height: 42px;
		        margin-left: 9px;
		        // margin-top: 59px;
		      }

		      @include animation(fade-in 800ms ease $transition-speed * 12);
		      @include animation-fill-mode(both);

		      &.game-won {
		        background: rgba($tile-gold-color, .5);
		        color: $bright-text-color;
		      }

		      &.game-won, &.game-over {
		        display: block;
		      }
		    }
		  }

		  .grid-container {
		    position: absolute;
		    z-index: 1;
		  }

		  .grid-row {
		    margin-bottom: $grid-spacing;

		    &:last-child {
		      margin-bottom: 0;
		    }

		    &:after {
		      content: "";
		      display: block;
		      clear: both;
		    }
		  }

		  .grid-cell {
		    width: $tile-size;
		    height: $tile-size;
		    margin-right: $grid-spacing;
		    float: left;

		    border-radius: $tile-border-radius;

		    background: rgba($tile-color, .35);

		    &:last-child {
		      margin-right: 0;
		    }
		  }

		  .tile-container {
		    position: absolute;
		    z-index: 2;
		  }

		  .tile {
		    width: $tile-size;
		    height: $tile-size;
		    line-height: $tile-size + 10px;

		    // Build position classes
		    @for $x from 1 through $grid-row-cells {
		      @for $y from 1 through $grid-row-cells {
		        &.tile-position-#{$x}-#{$y} {
		          position: absolute;
		          left: round(($tile-size + $grid-spacing) * ($x - 1));
		          top: round(($tile-size + $grid-spacing) * ($y - 1));
		        }
		      }
		    }
		  }
		}

		// End of game-field mixin
		@include game-field;

		.tile {
		  border-radius: $tile-border-radius;

		  background: $tile-color;
		  text-align: center;
		  font-weight: bold;
		  z-index: 10;

		  font-size: 55px;

		  @include transition($transition-speed ease-in-out);
		  @include transition-property(top, left);

		  $base: 2;
		  $exponent: 1;
		  $limit: 11;

		  // Colors for all 11 states, false = no special color
		  $special-colors: false false, // 2
		                   false false, // 4
		                   #f78e48 true, // 8
		                   #fc5e2e true, // 16
		                   #ff3333 true, // 32
		                   #ff0000 true, // 64
		                   false true, // 128
		                   false true, // 256
		                   false true, // 512
		                   false true, // 1024
		                   false true; // 2048

		  // Build tile colors
		  @while $exponent <= $limit {
		    $power: pow($base, $exponent);

		    &.tile-#{$power} {
		      // Calculate base background color
		      $gold-percent: ($exponent - 1) / ($limit - 1) * 100;
		      $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

		      $nth-color: nth($special-colors, $exponent);

		      $special-background: nth($nth-color, 1);
		      $bright-color: nth($nth-color, 2);

		      @if $special-background {
		        $mixed-background: mix($special-background, $mixed-background, 55%);
		      }

		      @if $bright-color {
		        color: $bright-text-color;
		      }

		      // Set background
		      background: $mixed-background;

		      // Add glow
		      $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

		      @if not $special-background {
		        box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
		                    inset 0 0 0 1px rgba(white, $glow-opacity / 3);
		      }

		      // Adjust font size for bigger numbers
		      @if $power >= 100 and $power < 1000 {
		        font-size: 45px;

		        // Media queries placed here to avoid carrying over the rest of the logic
		        @include smaller(480px) {
		          font-size: 25px;
		        }
		      } @else if $power >= 1000 {
		        font-size: 35px;

		        @include smaller(480px) {
		          font-size: 15px;
		        }
		      }
		    }

		    $exponent: $exponent + 1;
		  }
		}

		@include keyframes(appear) {
		  0% {
		    opacity: 0;
		    -webkit-transform: scale(0);
		    -moz-transform: scale(0);
		  }

		  100% {
		    opacity: 1;
		    -webkit-transform: scale(1);
		    -moz-transform: scale(1);
		  }
		}

		.tile-new {
		  @include animation(appear 200ms ease $transition-speed);
		  @include animation-fill-mode(both);
		}

		@include keyframes(pop) {
		  0% {
		    -webkit-transform: scale(0);
		    -moz-transform: scale(0);
		  }

		  50% {
		    -webkit-transform: scale(1.2);
		    -moz-transform: scale(1.2);
		  }

		  100% {
		    -webkit-transform: scale(1);
		    -moz-transform: scale(1);
		  }
		}

		.tile-merged {
		  z-index: 20;
		  @include animation(pop 200ms ease $transition-speed);
		  @include animation-fill-mode(both);
		}

		.game-intro {
		  margin-bottom: 0;
		}

		.game-explanation {
		  margin-top: 50px;
		}

		@include smaller(480px) {
		  // Redefine variables for smaller screens
		  $field-width: 280px;
		  $grid-spacing: 10px;
		  $grid-row-cells: 4;
		  $tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
		  $tile-border-radius: 3px;

		  html, body {
		    font-size: 15px;
		  }

		  body {
		    margin: 20px 0;
		    padding: 0 20px;
		  }

		  h1.title {
		    font-size: 50px;
		  }

		  .container {
		    width: $field-width;
		    margin: 0 auto;
		  }

		  .score-container {
		    margin-top: 0;
		  }

		  .heading {
		    margin-bottom: 10px;
		  }

		  // Render the game field at the right width
		  @include game-field;

		  .game-container {
		    margin-top: 20px;
		  }

		  // Rest of the font-size adjustments in the tile class
		  .tile {
		    font-size: 35px;
		  }

		  .game-message {
		    p {
		      font-size: 30px !important;
		      height: 30px !important;
		      line-height: 30px !important;
		      margin-top: 90px !important;
		    }

		    .lower {
		      margin-top: 30px !important;
		    }
		  }
		}

		&.show {
			display: block;
		}
	}

	#page, #content, #primary, #main {
		background: none;
		height: 100vh;
	}

	.table {
		background-image: url(assets/images/404.png);
		background-size: auto;
		background-position:center;
		background-repeat: no-repeat;
		background-color: #eeeeee;
		background-size: contain;

		@include media($large-screen-up) {
			background-size: auto;
		}

	}

	.error-404 {
		text-align: right;
		max-width: 1100px;
		margin: 0 auto;
		padding: 0 40px;

		a {
			position: absolute;
			background: black;
			color: white;
			padding: 10px;
			border-radius: 6px;
			right: 40px;
			bottom: 40px;

			&.procrastinate {
				display: none;

				@include media($large-screen-up) {
					display: block;
				}
			}
		}

		h1 {
			font-size: 69px;
			margin: 0;
			line-height: 1;
			float: right;
			text-align: right;
			color: #333333;

			span {
				font-size: 120px;
			}
		}
	}

	#colophon {
		display: none;
	}
}


.search {
	height: 100vh;
	background-color: #eeeeee;

	#page, #content, #primary, #main {
		background: none;
		height: 100vh;
	}

	.table {
		background-image: url(assets/images/search.jpg);
		background-size: contain;
		background-position: 40% center;
		background-repeat: no-repeat;
		background-color: #eeeeee;
	}

	.search-res {
		text-align: right;
		max-width: 1280px;
		margin: 0 auto;
		padding: 0 40px;

		h1 {
			font-size: 39px;
			margin: 0;
			width: 250px;
			position: absolute;
			right: 20%;
			top: 140px;
			text-align: right;
			color: #333333;
		}
	}

	#colophon {
		display: none;
	}
}
